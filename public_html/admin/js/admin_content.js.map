{"version":3,"sources":["../../../assets_origin/admin_content.jsx"],"names":["Component","React","createPortal","render","ReactDOM","ContentEditor","constructor","props","_initEditor","bind","componentDidMount","timer","setTimeout","FroalaEditor","editorId","editorConfig","name","defaultValue","AdminContent","state","list","remove","loading","_addContent","_onGetContents","_removeItemList","setState","$","get","window","location","href","res","length","JSON","parse","push","idx","_remoteDelete","id","Promise","resolve","post","_remove","item","ans","confirm","e","console","log","target","map","includes","key","title","content","document","getElementById","wrap"],"mappings":"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","sourcesContent":["const {Component} = React;\nconst {createPortal, render} = ReactDOM;\n\nclass ContentEditor extends Component {\n    constructor(props) {\n        super(props);\n\n        this._initEditor = this._initEditor.bind(this);\n    }\n\n    componentDidMount() {\n        this.timer = setTimeout(this._initEditor, 300);\n    }\n\n    _initEditor() {\n        new FroalaEditor(`#${this.props.editorId}`, editorConfig);\n    }\n\n    render() {\n        const {name, defaultValue, editorId} = this.props;\n        // console.log(this.props);\n        return (\n            <textarea\n                name={name}\n                className=\"form-control editor\"\n                id={editorId}\n                defaultValue={defaultValue}\n            />\n        );\n    }\n}\n\nclass AdminContent extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            list: [true],\n            remove: [],\n            loading: false\n        };\n\n        this._addContent = this._addContent.bind(this);\n        this._onGetContents = this._onGetContents.bind(this);\n        this._removeItemList = this._removeItemList.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({loading: true});\n        $.get(window.location.href, this._onGetContents);\n    }\n\n    _onGetContents(res) {\n        let list;\n        if (!res || !res.length || !(list = JSON.parse(res))) return this.setState({loading: false});\n        return this.setState({list, loading: false});\n    }\n\n\n    _addContent() {\n        return this.setState(({list}) => {\n            list.push(true);\n            return {list};\n        });\n    };\n\n    _removeItemList(idx) {\n        return this.setState(({remove}) => {\n            remove.push(idx);\n            return {remove};\n        });\n    }\n\n    _remoteDelete(id) {\n        return new Promise(resolve => {\n            $.post(`/admin/content/removeContent/${id}`, {}, resolve);\n        });\n    }\n\n    async _remove(item, idx) {\n        if (typeof item === 'object') {\n            const ans = confirm('Bạn có chắc sẽ xoá đi nội dung này?');\n            if (!ans) return;\n            try {\n                await this._remoteDelete(item.id);\n                return this._removeItemList(idx);\n            } catch (e) {\n                console.log(e);\n            }\n        }\n        return this._removeItemList(idx);\n    }\n\n    render() {\n        let target;\n        const {loading} = this.state;\n        return (\n            <React.Fragment>\n                {!this.state.list.length ? (\n                    <div className=\"empty-block\">\n                        <img src=\"/images/no-content.jpg\" alt=\"No content\"/>\n                        <h4>{loading ? 'Đang tải...' : 'Không có nội dung'}</h4>\n                        <button\n                            type=\"button\"\n                            className=\"btn btn-outline-info btn-round\"\n                            role=\"button\"\n                            onClick={this._addContent}\n                        >Thêm\n                        </button>\n                    </div>\n                ) : this.state.list.map((item, idx) => {\n                    if (this.state.remove.includes(idx)) return null;\n                    let key = typeof item === 'object' ? item.id : `_${idx}`;\n                    return (\n                        <div key={`h.${idx}`} className=\"content-item\">\n                            <div className=\"flex-title\">\n                                <input\n                                    type=\"text\"\n                                    name={`contents[${key}][title]`}\n                                    className=\"form-control flex-row\"\n                                    placeholder=\"Nhập tiêu đề...\"\n                                    autoCapitalize={'true'}\n                                    autoComplete={'off'}\n                                    autoCorrect={'false'}\n                                    defaultValue={item && item.title}\n                                />\n                                <button\n                                    className=\"btn btn-just-icon btn-danger btn-remove\"\n                                    type={'button'}\n                                    onClick={this._remove.bind(this, item, idx)}\n                                >\n                                    <i className=\"material-icons\" data-notify=\"icon\">delete</i>\n                                </button>\n                            </div>\n                            <ContentEditor\n                                name={`contents[${key}][content]`}\n                                editorId={`editor${key}`}\n                                defaultValue={item && item.content}\n                            />\n                        </div>\n                    );\n                })}\n                {!this.state.list.length || !(target = document.getElementById('add-holder')) ? null : createPortal((\n                    <button\n                        type={'button'}\n                        className={'btn btn-outline-info btn-round'}\n                        onClick={this._addContent}\n                    >Thêm nội dung\n                    </button>\n                ), target)}\n            </React.Fragment>\n        );\n    }\n}\n\nlet wrap;\nif ((wrap = document.getElementById('content-list'))) {\n    render(<AdminContent/>, wrap);\n}\n"],"file":"admin_content.js"}